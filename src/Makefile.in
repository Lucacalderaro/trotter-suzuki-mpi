# @configure_input@

# Package-related substitution variables
package	= @PACKAGE_NAME@
version	= @PACKAGE_VERSION@
tarname	= @PACKAGE_TARNAME@
distdir	= $(tarname)-$(version)

# Prefix-related substitution variables
prefix	 = @prefix@
exec_prefix    = @exec_prefix@
bindir	 = @bindir@
incdir	 = @includedir@
libdir	 = @libdir@

# Tool-related substitution variables
CXX		         = @CXX@
CXXFLAGS       = @CXXFLAGS@
LIBS	         = @LIBS@
DEFS           = @DEFS@
INSTALL	       = @INSTALL@
INSTALL_DATA   = @INSTALL_DATA@
INSTALL_PROGRAM= @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
HAVE_SSE       = @HAVE_SSE@
CUDA_CFLAGS    = @CUDA_CFLAGS@
CUDA_LIBS      = @CUDA_LIBS@
CUDA_LDFLAGS   = @CUDA_LDFLAGS@
NVCC       	   = @NVCC@
MPI_INC        = @MPI_INC@
MPI_LIBDIR     = @MPI_LIBDIR@
MPI_LIBS       = @MPI_LIBS@
MATLAB_ROOT    = @MATLAB_ROOT@
MEX_BIN        = @MEX_BIN@

# VPATH-related substitution variables
srcdir	 = @srcdir@
VPATH	  = @srcdir@

LIBOBJS=common.o cpublock.o trotter.o solver.o

MEX_FLAGS=-I./
MEX_LIBS=-lgomp
MEX_OBJS=common.o cpublock.o trotter.o solver.o

platform=$(shell uname -s)

ifeq ($(HAVE_SSE),1)
	LIBOBJS+=cpublocksse.o 
endif

ifdef CUDA_LIBS
	LIBOBJS+=cc2kernel.cu.co hybrid.cu.co
	MEX_FLAGS+=-I"$(MATLAB_ROOT)/toolbox/distcomp/gpu/extern/include/" -DCUDA 
	MEX_LIBS+=$(CUDA_LDFLAGS) $(CUDA_LIBS) -lnvblas -lmwgpu
	MEX_OBJS+=cc2kernel.cu.o hybrid.cu.o
endif

OBJS=$(LIBOBJS) main.o solver.o

all: trotter lib

lib: $(LIBOBJS)
	$(CXX) $(DEFS) $(CXXFLAGS) $(CUDA_LDFLAGS) ${MPI_LIBDIR} -shared -o trotter.so $^ $(LIBS) $(CUDA_LIBS) ${MPI_LIBS}
	
trotter: $(OBJS)
	$(CXX) $(DEFS) $(CXXFLAGS) $(CUDA_LDFLAGS) ${MPI_LIBDIR} -o $@ $^ $(LIBS) $(CUDA_LIBS) ${MPI_LIBS}

%.o: %.cpp
	$(CXX) $(DEFS) $(CXXFLAGS) ${MPI_INC} -iquote$(srcdir) -iquote.. -o $@ -c $(srcdir)/$<

%.cu.co: %.cu
	$(NVCC) $(DEFS) $(CUDA_CFLAGS) ${MPI_INC} -I$(srcdir) -I.. -o $@ -c $(srcdir)/$<

matlab: lib
	if [ -e cc2kernel.cu.co ]; then cp cc2kernel.cu.co cc2kernel.cu.o; cp hybrid.cu.co hybrid.cu.o; fi
	$(MEX_BIN) $(MEX_FLAGS) MATLAB/MexTrotter.cpp $(MEX_OBJS) $(MEX_LIBS)
	$(MEX_BIN) $(MEX_FLAGS) MATLAB/MexH.cpp ./common.o $(MEX_LIBS)
	$(MEX_BIN) $(MEX_FLAGS) MATLAB/MexK.cpp ./common.o $(MEX_LIBS)
	$(MEX_BIN) $(MEX_FLAGS) MATLAB/MexNorm.cpp ./common.o $(MEX_LIBS)

matlab_clean:
	-rm -f Mex*

python:
	mkdir -p ./Python/trottersuzuki/src
	mkdir -p ./Python/trottersuzuki/src/Windows
	mkdir -p ./Python/trottersuzuki/test
	mkdir -p ./Python/trottersuzuki/examples
	cp ../COPYING ./Python
	cp ../Makefile.in ./Python/trottersuzuki/
	cp ../configure ./Python/trottersuzuki/
	cp ../config.h.in ./Python/trottersuzuki/
	cp ../install-sh ./Python/trottersuzuki/
	cp ./Makefile.in ./Python/trottersuzuki/src/
	cp ../test/Makefile.in ./Python/trottersuzuki/test/
	cp ../examples/Makefile.in ./Python/trottersuzuki/examples/
	cp ./*.h ./Python/trottersuzuki/src/
	cp ./*.cpp ./Python/trottersuzuki/src/
	cp ./*.cu ./Python/trottersuzuki/src/
	swig -c++ -python ./Python/trottersuzuki/trotter.i
	cd Python; python setup.py build

python_install: python python_doc
	cd Python; python setup.py install

python_clean:
	-rm -rf Python/trottersuzuki/src Python/trottersuzuki/examples Python/trottersuzuki/test Python/*.pyc Python/trottersuzuki/*.pyc Python/trottersuzuki/*.h Python/trottersuzuki/*.cpp  Python/trottersuzuki/*.cxx Python/dist Python/trottersuzuki.egg* Python/build Python/trottersuzuki/trottersuzuki.py Python/trottersuzuki/*.so Python/trottersuzuki/Makefile* Python/trottersuzuki/config* Python/trottersuzuki/install*

clean: python_clean matlab_clean
	-rm -f trotter trotter.so $(OBJS) 1>/dev/null

install: all
	$(INSTALL) -d $(DESTDIR)$(bindir)
	$(INSTALL_PROGRAM) -m 0755 trotter \
	 $(DESTDIR)$(bindir)
	$(INSTALL_PROGRAM) -m 0755 trotter.so \
	 $(DESTDIR)$(libdir)
	$(INSTALL_PROGRAM) -m 0644 trotter.h $(DESTDIR)$(incdir)	 

uninstall:
	-rm $(DESTDIR)$(bindir)/trotter &>/dev/null

Makefile: Makefile.in ../config.status
	cd .. && ./config.status $@

../config.status: ../configure
	cd .. && ./config.status --recheck

.PHONY: all clean install uninstall
